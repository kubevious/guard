import { ILogger } from 'the-logger';
import { Promise } from 'the-promise';
import { ProcessingTrackerScoper } from '@kubevious/helper-backend';
import { Context } from '../../context';
import { ExecutorTaskTarget } from './types';
export declare class ExecutorTask {
    private _context;
    private _logger;
    private _target;
    private _snapshotIdStr;
    private _targetBundleState?;
    private _targetSnapshot?;
    private _latestSnapshot;
    private _baseSnapshot;
    private _latestSummary;
    private _deltaSummary;
    private _baseDeltaSnapshots;
    private _finalPersistableSnapshot;
    private _latestSnapshotDelta;
    private _timelineSummary;
    private _registryState?;
    private _rules?;
    private _markers?;
    private _ruleEngineResult?;
    private _snapshotDate;
    private _validationConfig;
    private _logicStoreItems;
    constructor(logger: ILogger, context: Context, target: ExecutorTaskTarget);
    get logger(): ILogger;
    execute(tracker: ProcessingTrackerScoper): Promise<void>;
    private _queryValidatorConfig;
    private _queryRules;
    private _queryMarkers;
    private _queryLogicStore;
    private _executeLogicProcessor;
    private _executeSnapshotProcessor;
    private _queryBaseSnapshot;
    private _checkBaseSnapshot;
    private _processLatestDeltaSnapshot;
    private _processBaseDeltaSnapshot;
    private _producePersistableSnapshot;
    private _calculateSummary;
    private _notifyWebSocket;
    private _produceSnapshot;
    private _produceDeltaSnapshot;
    private _calculateDiffPercentage;
    private _outputFile;
}
//# sourceMappingURL=executor-task.d.ts.map