import { ILogger } from 'the-logger';
import { Backend } from '@kubevious/helper-backend';
import { FacadeRegistry } from './facade/registry';
import { Database } from './db';
import { Registry } from './registry/registry';
import { Collector } from './collector/collector';
import { DebugObjectLogger } from './utils/debug-object-logger';
import { SnapshotProcessor } from './snapshot-processor';
import { WorldviousClient } from '@kubevious/worldvious-client';
import { RedisClient } from '@kubevious/helper-redis';
import { SeriesResampler } from '@kubevious/data-models';
import { ParserLoader } from '@kubevious/helper-logic-processor';
import { Executor } from './app/executor/executor';
import { ConfigAccessor } from '@kubevious/data-models';
import { WebSocketUpdater } from './app/websocket-updater/websocket-updater';
import { BackendMetrics } from './app/backend-metrics';
export declare class Context {
    private _backend;
    private _logger;
    private _worldvious;
    private _server;
    private _dataStore;
    private _redis;
    private _collector;
    private _registry;
    private _facadeRegistry;
    private _debugObjectLogger;
    private _executor;
    private _configAccessor;
    private _snapshotProcessor;
    private _seriesResamplerHelper;
    private _parserLoader;
    private _webSocketUpdater;
    private _backendMetrics;
    constructor(backend: Backend);
    get backend(): Backend;
    get logger(): ILogger;
    get tracker(): import("@kubevious/helper-backend").ProcessingTracker;
    get mysqlDriver(): import("@kubevious/helper-mysql/dist").MySqlDriver;
    get database(): Database;
    get dataStore(): Database;
    get redis(): RedisClient;
    get executor(): Executor;
    get facadeRegistry(): FacadeRegistry;
    get collector(): Collector;
    get registry(): Registry;
    get debugObjectLogger(): DebugObjectLogger;
    get configAccessor(): ConfigAccessor;
    get snapshotProcessor(): SnapshotProcessor;
    get worldvious(): WorldviousClient;
    get seriesResamplerHelper(): SeriesResampler<import("@kubevious/data-models/dist/time-series/series-resampler").TimeSeriesPoint>;
    get webSocketUpdater(): WebSocketUpdater;
    get parserLoader(): ParserLoader;
    get backendMetrics(): BackendMetrics;
    private _setupMetricsTracker;
}
//# sourceMappingURL=context.d.ts.map